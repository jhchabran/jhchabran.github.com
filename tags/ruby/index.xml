<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ruby on jhchabran</title>
    <link>http://jhchabran.dev/tags/ruby/</link>
    <description>Recent content in Ruby on jhchabran</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Jan 2013 00:00:00 +0000</lastBuildDate><atom:link href="http://jhchabran.dev/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducing Photograph</title>
      <link>http://jhchabran.dev/posts/2013-01-10-introducing-photograph/</link>
      <pubDate>Thu, 10 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://jhchabran.dev/posts/2013-01-10-introducing-photograph/</guid>
      <description>Photograph is a really simple gem that provides to take screenshots of webpages as they are rendered in webkit. Give Photograph the url you want and that&amp;rsquo;s all.
The interesting part is how easy this was to code !
{% end_excerpt %}
Throwing gems at it It&amp;rsquo;s about using Capybara with Polteirgeist (which wraps PhantomJS) to take the screenshot itself, then use MiniMagick to crop if needed. Adding some Ruby around it makes the Ruby API :</description>
    </item>
    
    <item>
      <title>Mixed links of the week (2)</title>
      <link>http://jhchabran.dev/posts/2012-12-14-mixed-links-of-the-week-2/</link>
      <pubDate>Fri, 14 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://jhchabran.dev/posts/2012-12-14-mixed-links-of-the-week-2/</guid>
      <description>It&amp;rsquo;s been eleven days since my last mixed links of the week.
So far I managed to build up enough motivation to write at least one article per week, thanks to this great book, I still have trouble posting these mixed links on a fixed day :).
Anyway, this week includes Ruby, Haskell, R, an interview, communications and a surprising initiative!
French readers, don&amp;rsquo;t miss Dimelo Ruby Christmas Contest, win a Nexus 7 by submitting pull requests to open source projects.</description>
    </item>
    
    <item>
      <title>Fun with to_proc and compositions</title>
      <link>http://jhchabran.dev/posts/2012-12-9-fun-with-to-proc-and-compositions/</link>
      <pubDate>Sun, 09 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://jhchabran.dev/posts/2012-12-9-fun-with-to-proc-and-compositions/</guid>
      <description>What about being able to shorten users.collect { |user| user.order.city } or its unefficient form users.collect(&amp;amp;:order).collect(&amp;amp;:city) into
{% highlight ruby %} users.collect(&amp;amp;[:order, :city]) {% endhighlight %}
It can be achieved by composing functions, in Ruby&amp;rsquo;s case by composing Procs. This is an amusing exercise that demonstrates Ruby&amp;rsquo;s functional abilites.
{% end_excerpt %}
Just in case you need to freshen your memory about composing functions, it&amp;rsquo;s a common notion in functional programming and it&amp;rsquo;s also found early in mathematics courses.</description>
    </item>
    
    <item>
      <title>Writing readable specs</title>
      <link>http://jhchabran.dev/posts/2011-09-11-writing-readable-specs/</link>
      <pubDate>Sun, 11 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>http://jhchabran.dev/posts/2011-09-11-writing-readable-specs/</guid>
      <description>Writing Rails specs with RSpec and FactoryGirl is easy to do when you got a basic understanding of testing principles but you may have noticed how these specs tends to get cluttered over time. Even to the point you don&amp;rsquo;t get what&amp;rsquo;s going on at all and call your co-worker who wrote them and ask him to handle your task!
The following points are basic principles to keep in mind while writing specs to avoid being stuck with an unreadable spec.</description>
    </item>
    
    <item>
      <title>Mixed links of the week (1)</title>
      <link>http://jhchabran.dev/posts/2012-12-3-mixed-links-of-the-week-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://jhchabran.dev/posts/2012-12-3-mixed-links-of-the-week-1/</guid>
      <description>Not Rails: Rails isn&amp;rsquo;t the right answer for every project. Speeding up things with JRuby: basic example showing how JRuby obliterates MRI when it comes to threading. Building Mruby on Android : who thought that building mruby on Android would be so easy ? Fast Analytics with Redis : old tricks never dies, Redis and its bitwise operations to store analytics. Vim: efficient command mode: an interesting thread on reddit, found many Vim tips I never heard about.</description>
    </item>
    
  </channel>
</rss>
